apiVersion: witboost.com/v2
kind: EditTemplate
metadata:
  name: edit-gx-guardian-workload-template.0
  title: Great Expectations Guardian Workload Edit Template
  description: Edit a Great Expectations Guardian Workload
  tags:
    - edit
    - workload
    - gx
    - guardian
spec:
  owner: agilelab
  useCaseTemplateId:
    - urn:dmb:utm:gx-guardian-workload-template:0.0.0
  parameters:
    - title: Update Workload
      description: |
        This wizard will allow you to edit the metadata for a previously created GX Guardian Workload.

        Most metadata is editable but some (like the name, domain, parent, etc) are not; their fields will be read-only.

        Some of the files in the component's repository cannot be updated by this wizard, namely:
        - **Documentation**: `README.md`, `docs/index.md`, etc
        - **CI/CD**: `.gitlab-ci-yaml`
        You need to take care of updating these yourself, as given their nature it's hard to do automatically and they are often edited manually after the component's creation.

    - title: Update component metadata
      description: update basic information for this component.
      required:
        - description
      properties:
        name:
          title: Name
          type: string
          description: Not editable. The name of the component.
          ui:disabled: true
        description:
          title: Description
          type: string
          description: Help others understand what this Workload is for
        domain:
          title: Domain
          type: string
          description: Not editable. Domain of the System this component belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
          ui:disabled: true
        parentRef:
          title: System
          type: string
          description: Not editable. The System this workload belongs to.
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
          ui:disabled: true
        identifier:
          title: Identifier
          type: string
          description: Autogenerated from the information above. A unique identifier for the component. It will not be editable after creation and is a string composed of [a-zA-Z] separated by any of [-_].
          ui:field: ComponentIdentifierPicker
          ui:options:
            allowArbitraryValues: false
        developmentGroup:
          title: Development Group
          type: string
          description: Automatically selected from the System metadata. System development group.
          ui:field: EntitySelectionPicker
          ui:fieldName: parentRef
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependsOn:
          title: Dependencies
          type: array
          description: |
            A component could depend on other components in the same System. This information will be used to deploy the components in such an order that their dependencies already exist.

            **Warning**: be careful not to select this component as its own dependency, otherwise it will become undeployable until you edit it again and remove that circular dependency.
          default: []
          items:
            type: string
            ui:field: EntityRelationsPicker
            ui:fieldName: parentRef
            relation: hasPart
        readsFrom:
          title: Reads from
          type: array
          default: []
          items:
            type: string
            ui:field: ReadsFromPicker
          description: This is filled only for DataPipeline workloads and it represents the list of output ports or external systems that is reading
        tags:
          title: Tags
          type: array
          description: Tags for the component
          default: []
          items:
            type: string

    - title: Update Data Contract selection
      description: Select the Data Contracts to monitor
      required:
        - dataContracts
      properties:
        dataContracts:
          title: Data Contracts
          description: Choose Data Contracts
          ui:field: EntitySearchPicker
          ui:options:
            multiSelection: true
            entities:
              - type: DataContract
                returnField: urn
                filter:
                  system: '{{parentRef}}'
                userFilters:
                  - search
                  - system

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./edit-skeleton
        targetPath: .
        values:
          description: '${{ parameters.description }}'
          dependsOn: '${{ parameters.dependsOn }}'
          readsFrom: '${{ parameters.readsFrom }}'
          tags: '${{ parameters.tags }}'
          dataContracts: '${{ parameters.dataContracts }}'
